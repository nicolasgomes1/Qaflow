@page "/Users/View/{Id:guid}"
@attribute [Authorize]
@rendermode InteractiveServer

<PageTitle>View User</PageTitle>

<AlertTitle TitleText="@($"Viewing User {Id.ToString()}")"></AlertTitle>

<RadzenCard Style="width: 50%; padding: 20px;">
    @if (_user != null)
    {
        <div style="display: grid; grid-template-columns: 1fr 2fr; row-gap: 10px;">
            <RadzenLabel Text="Id:" Style="font-weight: bold;"/>
            <RadzenLabel Text="@_user.Id.ToString()"/>

            <RadzenLabel Text="UserName:" Style="font-weight: bold;"/>
            <RadzenLabel Text="@_user.UserName?.ToString()"/>

            <RadzenLabel Text="Email:" Style="font-weight: bold;"/>
            <RadzenLabel Text="@_user.Email?.ToString()"/>

            <RadzenLabel Text="Email Confirmed:" Style="font-weight: bold;"/>
            <RadzenLabel Text="@_user.EmailConfirmed.ToString()"/>

            <RadzenLabel Text="Phone Number:" Style="font-weight: bold;"/>
            <RadzenLabel Text="@_user.PhoneNumber?.ToString()"/>

            <RadzenLabel Text="Phone Number Confirmed:" Style="font-weight: bold;"/>
            <RadzenLabel Text="@_user.PhoneNumberConfirmed.ToString()"/>

            <RadzenLabel Text="Roles:" Style="font-weight: bold;"/>
            <RadzenLabel Text="@_userRole"/>
        </div>

        <div style="margin-top: 10px;">
            <RadzenButton Text="Edit"
                          Visible='IsUserAdmin()'
                          ButtonType="ButtonType.Submit"
                          Click='() => NavigationManager.NavigateTo($"/Users/Edit/{Id}")'/>
            <RadzenButton Text="Cancel"
                          Visible='IsUserAdmin()'
                          Click='() => NavigationManager.NavigateTo("/Users/Index")'
                          ButtonType="ButtonType.Button"/>
            <RadzenButton Text="Go Back"
                          Visible='!IsUserAdmin()'
                          Click='() => NavigationManager.NavigateTo("/")'
                          ButtonType="ButtonType.Button"/>
        </div>
    }
    else
    {
        <p>No User Found</p>
    }
</RadzenCard>

@code {
    [Parameter] public Guid Id { get; set; }

    [Required] private ApplicationUser? _user;
    private string _userRole = "";

    protected override async Task OnInitializedAsync()
    {
        var userid = await UserManager.FindByIdAsync(Id.ToString());
        if (userid != null)
        {
            _user = userid;
        }

        if (_user == null) throw new ApplicationException($"Unable to load user with ID '{Id}'.");

        var roles = await UserManager.GetRolesAsync(_user);
        _userRole = roles.FirstOrDefault() ?? "No Role Assigned";
    }

    bool IsUserAdmin()
    {
        if (_userRole.Equals("Admin"))
        {
            return true;
        }

        return false;
    }
}