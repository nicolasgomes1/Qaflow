@page "/integrations"

@attribute [Authorize]
@rendermode InteractiveServer
@inject ILogger<Index> Logger
@attribute [Authorize(Roles = "Admin, Manager")]

<AlertTitle TitleText="External Integrations"/>
<RadzenDataGrid TItem="Integrations" Data="_integrations">
    <HeaderTemplate>
        <RadzenButton Click="CreateIntegration"
                      Size="ButtonSize.Medium"
                      Icon="add"
                      Text="Create"
                      MouseEnter="@(args => AppTooltipService.ShowTooltip(args, "Create Integration"))"
                      MouseLeave="@AppTooltipService.HideTooltip"
                      Style="margin-bottom: 20px"/>
    </HeaderTemplate>
    <Columns>
        <RadzenDataGridColumn Property="@nameof(Integrations.Id)"
                              Title="Id"
                              Width="auto"/>
        <RadzenDataGridColumn Property="@nameof(Integrations.IntegrationType)"
                              Title="Integration Type"
                              Width="auto"/>
        <RadzenDataGridColumn Property="@nameof(Integrations.Username)"
                              Title="Username"
                              Width="auto"/>

        <RadzenDataGridColumn Property="@nameof(Integrations.BaseUrl)" Title="BaseUrl" Width="auto"/>
        <RadzenDataGridColumn Property="@nameof(Integrations.ApiKey)"
                              Title="Api Key"
                              Width="auto"/>

        <RadzenDataGridColumn Title="Actions">
            <Template Context="item">
                <div class="btn-group" style="display: flex; gap: 5px;">
                    <RadzenButton Icon="visibility"
                                  MouseEnter="@(args => AppTooltipService.ShowTooltip(args, "View Integration"))"
                                  MouseLeave="@AppTooltipService.HideTooltip"
                                  Click="@(() => ViewIntegration(item.Id))" Size="ButtonSize.ExtraSmall"/>
                    <RadzenButton Icon="edit"
                                  MouseEnter="@(args => AppTooltipService.ShowTooltip(args, "Edit Integration"))"
                                  MouseLeave="AppTooltipService.HideTooltip"
                                  Click="@(() => EditIntegration(item.Id))" Size="ButtonSize.ExtraSmall"/>
                    <RadzenButton Icon="delete"
                                  MouseEnter="@(args => AppTooltipService.ShowTooltip(args, "Delete Integration"))"
                                  MouseLeave="@AppTooltipService.HideTooltip"
                                  Click="@(() => DeleteData(item.Id))"
                                  Size="ButtonSize.ExtraSmall"/>
                </div>
            </Template>
        </RadzenDataGridColumn>

    </Columns>
</RadzenDataGrid>


@code {
    IEnumerable<Integrations>? _integrations;

    protected override async Task OnInitializedAsync()
    {
        _integrations = await IntegrationsModel.GetListIntegrations();
        Logger.LogInformation("Integrations Loaded");
    }

    private void CreateIntegration()
    {
        NavigationManager.NavigateTo("/integrations/create");
    }

    private void ViewIntegration(int integrationId)
    {
        NavigationManager.NavigateTo($"/integrations/view/{integrationId}");
    }

    private async Task DeleteData(int integrationId)
    {
        var confirmed = await DialogService.Confirm("Are you sure you want to delete the Integration?", "All underlying Data will be lost");
        if (confirmed == true)
        {
            await IntegrationsModel.RemoveIntegrationAsync(integrationId);
        }

        _integrations = await IntegrationsModel.GetListIntegrations();

        NavigationManager.NavigateTo("/integrations");
    }

    private void EditIntegration(int integrationId)
    {
        NavigationManager.NavigateTo($"/integrations/edit/{integrationId}");
    }

}