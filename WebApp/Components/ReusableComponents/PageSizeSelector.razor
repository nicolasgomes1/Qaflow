<div style="margin-left: auto;">
    <RadzenLabel Text="Page Size:"></RadzenLabel>
    <RadzenDropDown @bind-Value="SelectedPageSize" Data="@PageSizes" TextProperty="Value" ValueProperty="Key"
                    Style="width: 100px;" Change="OnChange"/>
</div>

@code {

// The current page size, default to 5 or any initial value you prefer
    private int SelectedPageSize { get; set; } = 10;

// List of page sizes
    private Dictionary<int, string> PageSizes { get; set; } = new()
    {
        { 10, "10" },
        { 20, "20" },
        { 30, "30" },
        { 40, "40" },
        { 50, "50" }
    };

// Optional callback for notifying parent component of changes
    [Parameter] public EventCallback<int> PageSizeChanged { get; set; }

// Change event handler for the dropdown
    private async Task OnChange(object value)
    {
        SelectedPageSize = (int)value;
        if (PageSizeChanged.HasDelegate)
        {
            await PageSizeChanged.InvokeAsync(SelectedPageSize); // Notify parent if needed
        }
    }

// Public getter for the current page size, for direct access if needed
    public int GetPageSize()
    {
        return SelectedPageSize;
    }

}
