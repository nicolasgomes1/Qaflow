<div style="margin-top: 10px;">
    <RadzenButton Text="@CreateEdit"
                  ButtonType="ButtonType.Submit"
                  data-testid="submit"/>
    <RadzenButton Text="Cancel"
                  Click="@CancelUrlLink"
                  ButtonType="ButtonType.Button"
                  data-testid="cancel"/>
</div>

@code {

    /// <summary>
    ///     String Create or Update in the form
    /// </summary>
    [EditorRequired]
    [Parameter]
    public string CreateEdit { get; set; } = string.Empty;


    /// <summary>
    ///     EntityName lowercase that is in the url such as testcases, testplans, etc.
    ///     When the EntityName is null, it will redirect to the Users/Index page
    ///     When the EntityName is projects, it will redirect to the root page
    ///     When the EntityName is testcases, testplans, requirements, or testexecution, it will redirect to the project page
    /// </summary>
    [EditorRequired]
    [Parameter]
    public required string EntityName { get; set; }

    private int _projectId;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _projectId = await ProjectState.GetCurrentProjectAsync(); // Load Project ID
            StateHasChanged(); // Ensure UI updates
        }
    }
    private void CancelUrlLink()
    {
        switch (EntityName)
        {
            case "testcases" or "testplans" or "requirements" or "testexecution" or "bugs":
                NavigationManager.NavigateTo($"project/{_projectId}/{EntityName}");
                break;

            case "projects":
                NavigationManager.NavigateTo("/");
                break;

            case "integrations":
                NavigationManager.NavigateTo("/integrations");
                break;

            case "users":
                NavigationManager.NavigateTo("/Users/Index");
                break;
        }
    }

}