<RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal">
    <RadzenCard Style="max-width: 300px; flex: 1 1 420px; margin: 10px;">
        <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Center"
                     AlignItems="AlignItems.Center">
            <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal">
                <RadzenButton
                    data-testid="d_requirementsSpecification"
                    MouseEnter="@(args => AppTooltipService.ShowTooltip(args, "Requirements Specifications", TooltipPosition.Right))"
                    MouseLeave="@AppTooltipService.HideTooltip"
                    Icon="library_books"
                    ButtonStyle="ButtonStyle.Warning"
                    Click="@(() => NavigationManager.NavigateTo($"project/{ProjectId}/requirementsspecification", true))"/>
                <RadzenIcon Icon="arrow_right_alt" Style="font-size: 32px;"/>
                <RadzenButton
                    data-testid="d_requirements"
                    MouseEnter="@(args => AppTooltipService.ShowTooltip(args, "Requirements", TooltipPosition.Right))"
                    MouseLeave="@AppTooltipService.HideTooltip"
                    ButtonStyle="ButtonStyle.Warning"
                    Icon="assignment"
                    Click="@(() => NavigationManager.NavigateTo($"project/{ProjectId}/requirements", true))"/>
                <RadzenBadge BadgeStyle="BadgeStyle.Base" Text="@($" {req}%")"/>
            </RadzenStack>

            <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal"
                         JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center">
                <RadzenBadge BadgeStyle="BadgeStyle.Base" Text="@_requirementsCount"/>
                <RadzenBadge BadgeStyle="BadgeStyle.Base" Text="@_requirementsWithSpec"/>

            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <RadzenCard Style="max-width: 200px; flex: 1 1 420px; margin: 10px;">
        <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Center"
                     AlignItems="AlignItems.Center">
            <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal">
                <RadzenButton Text="@Loc["TestCases"]"
                              data-testid="d_testcases"
                              Click="@(() => NavigationManager.NavigateTo($"project/{ProjectId}/testcases", true))"/>
            </RadzenStack>
            <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal">
                <RadzenBadge BadgeStyle="BadgeStyle.Base" Text="@_testCasesCount" class="rz-ms-2"/>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <RadzenCard Style="max-width: 200px; flex: 1 1 420px; margin: 10px;">
        <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Center"
                     AlignItems="AlignItems.Center">
            <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal">
                <RadzenButton Text="@Loc["TestPlans"]"
                              data-testid="d_testplans"
                              Shade="Shade.Light"
                              Click="@(() => NavigationManager.NavigateTo($"project/{ProjectId}/testplans", true))"/>
            </RadzenStack>
            <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal">
                <RadzenBadge BadgeStyle="BadgeStyle.Base" Text="@_testPlansCount"/>
            </RadzenStack>
        </RadzenStack>


    </RadzenCard>


    <RadzenCard Style="max-width: 200px; flex: 1 1 420px; margin: 10px;">

        <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Center"
                     AlignItems="AlignItems.Center">
            <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal">
                <RadzenButton Text="@Loc["TestExecutions"]"
                              data-testid="d_testexecutions"
                              ButtonStyle="ButtonStyle.Success"
                              Click="@(() => NavigationManager.NavigateTo($"project/{ProjectId}/testexecution", true))"/>
            </RadzenStack>
            <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal">
                <RadzenBadge BadgeStyle="BadgeStyle.Base" Text="@_testExecutionsCount"/>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>


    <RadzenCard Style="max-width: 200px; flex: 1 1 420px; margin: 10px;">
        <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Center"
                     AlignItems="AlignItems.Center">
            <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal">
                <RadzenButton Text="@Loc["Bugs"]"
                              data-testid="d_bugs"
                              ButtonStyle="ButtonStyle.Danger"
                              Click="@(() => NavigationManager.NavigateTo($"project/{ProjectId}/bugs", true))"/>
            </RadzenStack>
            <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal">
                <RadzenBadge BadgeStyle="BadgeStyle.Base" Text="@_bugsCount"/>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <RadzenCard Style="max-width: 200px; flex: 1 1 420px; margin: 10px;">
        <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Center"
                     AlignItems="AlignItems.Center">
            <RadzenStack Orientation="Orientation.Horizontal" Wrap="FlexWrap.Wrap">
                <RadzenButton Text="@Loc["Reports"]"
                              data-testid="d_reports"
                              Click="@(() => NavigationManager.NavigateTo($"project/{ProjectId}/reports", true))"/>
            </RadzenStack>
            <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal">
                <RadzenBadge BadgeStyle="BadgeStyle.Base" Text="Reports: 3" class="rz-ms-2"/>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <RadzenCard Style="max-width: 200px; flex: 1 1 420px; margin: 10px;">
        <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Center"
                     AlignItems="AlignItems.Center">
            <RadzenStack Orientation="Orientation.Horizontal" Wrap="FlexWrap.Wrap">
                <RadzenButton Text="@Loc["Milestones"]"
                              data-testid="d_milestones"
                              Click="@(() => NavigationManager.NavigateTo($"project/{ProjectId}/milestones", true))"/>
            </RadzenStack>
            <RadzenStack Wrap="FlexWrap.Wrap" Orientation="Orientation.Horizontal">
                <RadzenBadge BadgeStyle="BadgeStyle.Base" Text="Milestones" class="rz-ms-2"/>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>
</RadzenStack>



@code {
    [EditorRequired] [Parameter] public int ProjectId { get; set; }

    private string _requirementsCount = string.Empty;
    private string _testCasesCount = string.Empty;
    private string _testPlansCount = string.Empty;
    private string _testExecutionsCount = string.Empty;
    private string _bugsCount = string.Empty;
    private string _requirementsWithSpec = string.Empty;
    private double req;

    protected override async Task OnInitializedAsync()
    {
        _requirementsWithSpec = await ReportsModel.RequirementsWithRequirementspecifications(ProjectId);
        _requirementsCount = await ReportsModel.LoadTotalRequirements(ProjectId);
        _testCasesCount = ReportsModel.LoadTotalTestCases(ProjectId);
        _testPlansCount = ReportsModel.LoadTotalTestPlans(ProjectId);
        _testExecutionsCount = ReportsModel.LoadTotalTestExecutions(ProjectId);
        _bugsCount = ReportsModel.LoadTotalBugs(ProjectId);
        req = await ReportsModel.RequirementsCoveredBySpecifications(ProjectId);
    }

}