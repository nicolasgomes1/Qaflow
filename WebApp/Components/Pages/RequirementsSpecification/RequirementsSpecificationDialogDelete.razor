<RadzenButton Icon="delete"
              ButtonStyle="ButtonStyle.Light" Style="color: red;"
              data-testid="delete"
              Size="ButtonSize.ExtraSmall"
              Click="() => DeleteItem(Id)"></RadzenButton>




@code {
    [EditorRequired] [Parameter] public EventCallback OnRequirementSpecificationDeleted { get; set; }
    [EditorRequired] [Parameter] public int Id { get; set; }


    private async Task DeleteItem(int item)
    {
        var confirmed = await DialogService.Confirm($"Are you sure you want to delete this {nameof(RequirementsSpecification)}?", $"Delete {nameof(RequirementsSpecification)}");

        if (confirmed is true)
        {
            var hey = await RequirementsSpecificationModel.DeleteRequirementsSpecification(item);

            switch (hey)
            {
                case true:
                    await FormNotificationService.NotifyError("Can't delete Requirements Specification has it has children");
                    break;
                case false:
                    await FormNotificationService.NotifySuccess($"Requirements Specification with Id {item} was successfully deleted");
                    break;
            }
        }

        if (OnRequirementSpecificationDeleted.HasDelegate)
        {
            await OnRequirementSpecificationDeleted.InvokeAsync();
        }
    }

}