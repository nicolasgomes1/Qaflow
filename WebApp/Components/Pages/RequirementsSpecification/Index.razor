@page "/project/{ProjectId:int}/requirementsspecification"
@rendermode InteractiveServer
@attribute [Authorize]

<div style="position: fixed; top: 10px; right: 10px; z-index: 1000;">
    <RequirementsDialogCreate Title="" ProjectId="ProjectId" OnRequirementCreated="() => RefreshPage()"/>
</div>

<RadzenDataGrid AllowFiltering="true"
                AllowColumnResize="true"
                AllowColumnReorder="true"
                AllowAlternatingRows="true"
                FilterMode="FilterMode.Advanced"
                AllowSorting="true"
                AllowPaging="true"
                AllowColumnPicking="true"
                PagerHorizontalAlign="HorizontalAlign.Left"
                ShowPagingSummary="true"
                AllowVirtualization="true"
                Data="@_requirementsSpecification"
                ColumnWidth="auto"
                LogicalFilterOperator="LogicalFilterOperator.Or"
                SelectionMode="DataGridSelectionMode.Single"
                @bind-Value="@_selectedRequirementsSpecifications"
                @bind-Settings="@DataGridSettingsService.Settings"
                @ref="_dataGrid"
                PageSizeOptions="@_pageSizeOptions"
                Density="Density.Compact">

    <HeaderTemplate>
        <RequirementsSpecificationDialogCreate Title="Requirement Specification" ProjectId="ProjectId"
                                               OnRequirementCreated="() => RefreshPage()"/>
        <DeleteallDataForModel EntityName="@(nameof(RequirementsSpecification))"
                               EntityList="_requirementsSpecification"/>
        <ExportGridDataCsv Grid="@_dataGrid"/>

    </HeaderTemplate>


    <Columns>
        <RadzenDataGridColumn Property="@nameof(RequirementsSpecification.Id)" Filterable="false" Title="ID"
                              Frozen="true"
                              Width="80px" TextAlign="TextAlign.Center"/>
        <RadzenDataGridColumn Property="@nameof(RequirementsSpecification.Name)" Title="Name" Frozen="true"
                              Width="auto"/>
        <RadzenDataGridColumn Property="@nameof(RequirementsSpecification.Description)" Title="Description"
                              Width="auto"/>
        <RadzenDataGridColumn Property="@nameof(RequirementsSpecification.LinkedRequirementsName)"
                              Title="Associated Requirements"
                              Sortable="false"
                              Filterable="true"
                              Width="auto">
            <Template Context="requirement">
                @string.Join(", ", requirement.LinkedRequirementsName)
            </Template>
        </RadzenDataGridColumn>

        <!-- Action Buttons column -->
        <IndexActionsModal TItem="RequirementsSpecification" EntityName="@nameof(RequirementsSpecification)"
                           OnRequirementSpecificationUpdated="() => RefreshPage()" IsDisabled="false"/>
    </Columns>
</RadzenDataGrid>



@code{
    [Parameter] public int ProjectId { get; set; }
    readonly IEnumerable<int> _pageSizeOptions = [10, 20, 30, 40, 50];


    private IList<RequirementsSpecification> _selectedRequirementsSpecifications = [];
    private IEnumerable<RequirementsSpecification> _requirementsSpecification = [];
    private RadzenDataGrid<RequirementsSpecification> _dataGrid = new();


    protected override async Task OnInitializedAsync()
    {
        await RefreshPage();
    }


    /// <summary>
    /// Gets or refreshes the page
    /// </summary>
    private async Task RefreshPage()
    {
        _requirementsSpecification = await RequirementsSpecificationModel.GetRequirementsSpecificationListAsync(ProjectId);
    }

}