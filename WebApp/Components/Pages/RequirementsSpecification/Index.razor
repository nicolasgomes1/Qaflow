@page "/project/{ProjectId:int}/requirementsspecification"
@rendermode InteractiveServer

<RadzenDataGrid Data="@_requirementsSpecification"
                ColumnWidth="auto"
                AllowFiltering="true"
                AllowSorting="true"
                AllowPaging="true"
                PageSize="10"
                Density="Density.Compact"
                LogicalFilterOperator="LogicalFilterOperator.Or"
                SelectionMode="DataGridSelectionMode.Single"
                @bind-Value="@_selectedRequirementsSpecifications"
                AllowVirtualization="true">

    <HeaderTemplate>
        <RequirementsSpecificationDialogCreate Title="Requirement Specification" ProjectId="ProjectId"
                                               OnRequirementCreated="() => RefreshPage()"/>
    </HeaderTemplate>

    <Columns>
        <RadzenDataGridColumn Property="@nameof(RequirementsSpecification.Id)" Filterable="false" Title="ID"
                              Frozen="true"
                              Width="80px" TextAlign="TextAlign.Center"/>
        <RadzenDataGridColumn Property="@nameof(RequirementsSpecification.Name)" Title="Name" Frozen="true"
                              Width="auto"/>
        <RadzenDataGridColumn Property="@nameof(RequirementsSpecification.Description)" Title="Description"
                              Width="auto"/>
        <RadzenDataGridColumn Property="@nameof(RequirementsSpecification.LinkedRequirements)"
                              Title="Associated Requirements"
                              Width="auto">
            <Template Context="requirement">
                @foreach (var req in requirement.LinkedRequirements)
                {
                    <a>@req.Name</a>
                }
            </Template>
        </RadzenDataGridColumn>


        <!-- Action Buttons column -->
        <IndexActionsModal TItem="RequirementsSpecification" EntityName="RequirementsSpecification"
                           OnRequirementSpecificationUpdated="() => RefreshPage()"/>
    </Columns>
</RadzenDataGrid>



@code{
    [Parameter] public int ProjectId { get; set; }


    private IList<RequirementsSpecification> _selectedRequirementsSpecifications = [];
    private IEnumerable<RequirementsSpecification> _requirementsSpecification = [];


    protected override async Task OnInitializedAsync()
    {
        await RefreshPage();
    }


    /// <summary>
    /// Gets or refreshes the page
    /// </summary>
    private async Task RefreshPage()
    {
        _requirementsSpecification = await RequirementsSpecificationModel.GetRequirementsSpecificationListAsync(ProjectId);
    }

}