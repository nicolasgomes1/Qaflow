@page "/project/{ProjectId:int}/bugs/view/{Id:int}"
@rendermode InteractiveServer


<RadzenTabs RenderMode="TabRenderMode.Client">
    <Tabs>
        <RadzenTabsItem Text="Bug Details">
            <RadzenRow>
                <RadzenCard Style="width: 50%; padding: 20px; margin-bottom:20px">
                    <div style="display: grid; grid-template-columns: 1fr 2fr; row-gap: 10px;">

                        <RadzenLabel Text="Id:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_bug.Id.ToString()"/>

                        <RadzenLabel Text="Name:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_bug.Name"/>

                        <RadzenLabel Text="Description:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_bug.Description"/>

                        <RadzenLabel Text="Priority:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_bug.Priority.ToString()"/>

                        <RadzenLabel Text="Severity:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_bug.Severity.ToString()"/>

                        <RadzenLabel Text="Created At:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_bug.CreatedAt.ToString(CultureInfo.CurrentCulture)"/>

                        <RadzenLabel Text="Modified At:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_bug.ModifiedAt.ToString(CultureInfo.CurrentCulture)"/>

                        <RadzenLabel Text="Created By:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_bug.CreatedBy"/>

                        <RadzenLabel Text="Modified By:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_bug.ModifiedBy"/>

                        @if (_bug.TestCaseExecutionId.HasValue)
                        {
                            <a>Open during TestExecution</a>
                            <RadzenLabel Text="Associated Test Case Execution:" Style="font-weight: bold;"/>
                            <RadzenLabel Text="@_bug.TestCaseExecutionId.ToString()"/>

                            <RadzenLabel Text="Associated Test Case" Style="font-weight: bold;"/>
                            <RadzenLink Text="@_testCaseExecution.TestCaseId.ToString()"
                                        Path="@TestCaseExecutionLink(_testCaseExecution.TestCaseId)"></RadzenLink>
                        }

                        @code

                        {
                            private string TestCaseExecutionLink(int id)
                            {
                                return $"/project/{ProjectId}/testcases/view/{id}";
                            }
                        }

                        @if (!_bug.TestCaseExecutionId.HasValue)
                        {
                            <a>Open outside of TestExecution</a>

                            <RadzenLabel Text="Associated Test Case" Style="font-weight: bold;"/>
                            @foreach (var testCase in TestCasesList)
                            {
                                <RadzenLink Text="@testCase.Id.ToString()"
                                            Path="@TestCaseLink(testCase.Id)"></RadzenLink>

                                    @code

                                    {
                                        private string TestCaseLink(int id)
                                        {
                                            return $"/project/{ProjectId}/testcases/view/{id}";
                                        }
                                    }
                                }
                        }
                    </div>
                </RadzenCard>
            </RadzenRow>
        </RadzenTabsItem>
        <RadzenTabsItem Text="@ContextFilesTitle()" Disabled="@BugsHasNoFiles">
            <FileViewer Files="Files"
                        EntityName="@nameof(BugsFiles)"/>
        </RadzenTabsItem>
        
        <RadzenTabsItem Text="Comments">
            <Comments Id="Id"/>
        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>



@code{
    [EditorRequired][Parameter] public int ProjectId { get; set; }
    [Parameter] public int Id { get; set; }

    private List<BugsFiles>? Files { get; set; }

    private Bugs _bug = new();

    private TestCaseExecution _testCaseExecution = new();

    private List<TestCases> TestCasesList { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        TestCasesList = await BugsModel.GetTestCasesAssociatedWithBugAsync(Id);
        _bug = await BugsModel.GetBugByIdAsync(Id);
        Files = await BugsFilesModel.GetBugFilesById(Id);
        _testCaseExecution = await TestExecutionModel.GetTestCaseExecutionByIdAsync(_bug.TestCaseExecutionId.HasValue ? _bug.TestCaseExecutionId.Value : 0) ?? new TestCaseExecution();
    }

    private bool BugsHasNoFiles => !BugsFilesModel.ExistingFiles.Any();

    private string ContextFilesTitle()
    {
        return BugsHasNoFiles ? Loc["files.nofiles"] : Loc["files.existingfiles"];
    }

    
}