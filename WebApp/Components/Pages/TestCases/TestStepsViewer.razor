@attribute [Authorize]

<RadzenDataGrid Data="@TestSteps"
                @bind-Value="@_selectedTestSteps"
                Density="Density.Compact"
                TItem="TestSteps"
                Style="margin-top: 10px;">
    <HeaderTemplate>
        <AlertTitle TitleText="Test Steps"></AlertTitle>
    </HeaderTemplate>
    <Columns>
        <RadzenDataGridColumn Property="@nameof(Data.TestSteps.Number)" Title="Step Number"/>
        <RadzenDataGridColumn Property="@nameof(Data.TestSteps.Description)" Title="Description"/>
        <RadzenDataGridColumn Property="@nameof(Data.TestSteps.ExpectedResult)" Title="Expected Result"/>
    </Columns>
</RadzenDataGrid>

@code {
    private IEnumerable<TestSteps>? TestSteps { get; set; }
    [EditorRequired] [Parameter] public int Id { get; set; }


    private IEnumerable<TestSteps> SortedTestSteps => TestSteps?.OrderBy(ts => ts.Number) ?? Enumerable.Empty<TestSteps>();
    private IList<TestSteps> _selectedTestSteps = [];


    protected override async Task OnInitializedAsync()
    {
        TestSteps = await TestCasesModel.GetTestStepsForTestCaseAsync(Id);
    }


}