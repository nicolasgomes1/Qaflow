@page "/GenerateJwt"
@attribute [Authorize(Roles = "Admin, Manager")]
@rendermode InteractiveServer
@inject UserService UserService
<h3>GenerateJwt</h3>

<RadzenButton Text="Generate" Click="() => GeneratenewJwt()"/>


<RadzenCard Style="width: 60%; padding: 1rem;">
    <pre Style="white-space: pre-wrap; word-break: break-all; margin: 0;">@JwtToken</pre>

    <RadzenLabel Style="color: red">
        Current Time @_currenttime
        Expiration Date @_expiration
    </RadzenLabel>

</RadzenCard>

@code {
    private string JwtToken = "";
    private DateTime _expiration;
    private DateTime _currenttime;

    private async Task GeneratenewJwt()
    {
        var currentUser = UserService.GetCurrentUserInfoAsync().Result.UserName;
        if (currentUser is not null)
        {
            JwtToken = await GenerateJwtToken.GenerateJwtTokenmethod(currentUser);
            _expiration = GenerateJwtToken.CalculateExpirationTime().Result.TokenExpirationTime;
            _currenttime = GenerateJwtToken.CalculateExpirationTime().Result.CurrentTime;
        }
        else
        {
            JwtToken = "Jwt Could not be created";
        }

        StateHasChanged();
    }

}