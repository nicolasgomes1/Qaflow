@attribute [Authorize]
@rendermode InteractiveServer

@code {
    private TestExecution _testExecution = new();
    private List<ApplicationUser> _usersList = [];
    private List<TestPlans> _testPlansList = [];
    [EditorRequired] [Parameter] public EventCallback OnTestExecutionUpdated { get; set; }
    [EditorRequired] [Parameter] public int ProjectId { get; set; }
    [EditorRequired] [Parameter] public int Id { get; set; }

    private async Task UpdateTestExecution()
    {
        await TestExecutionModelv2.UpdateTestExecution(_testExecution, ProjectId);

        DialogService.Close();
        StateHasChanged();
        await FormNotificationService.NotifySuccess($"Test Execution updated successfully with id {_testExecution.Id}");
        // Notify the parent that the requirement was created
        if (OnTestExecutionUpdated.HasDelegate)
        {
            await OnTestExecutionUpdated.InvokeAsync();
        }
    }

    public async Task ShowInlineDialog()
    {
        await TestExecutionModelv2.LoadTestPlanForTestExecution(Id, ProjectId);

        _testExecution = await TestExecutionModelv2.GetTestExecutionByIdAsync(Id);
        _testPlansList = await TestPlansModel.GetAllTestPlansWithWorkflowStatus(WorkflowStatus.Completed, ProjectId);
        _usersList = await UserService.GetUsersList();

        var result = await DialogService.OpenAsync("Update Test Execution", ds =>
            @<RadzenStack Gap="1.5rem" Style="height: 600px;">
                <RadzenTemplateForm Data="_testExecution" TItem="TestExecution" Submit="@UpdateTestExecution">
                    <ValidationSummary class="alert alert-danger"/>

                    <div class="form-group mb-4">
                        <RadzenLabel Text="Name"/>
                        <RadzenTextBox id="name"
                                       @bind-Value="_testExecution.Name"
                                       class="input-style"
                                       Name="name"/>
                        <RadzenRequiredValidator Component="name" Text="Name is required"/>
                    </div>

                    <div class="form-group mb-4">
                        <RadzenLabel Text="Description"/>
                        <RadzenTextArea id="description"
                                        @bind-Value="_testExecution.Description"
                                        class="input-style"
                                        Name="description"/>
                        <RadzenRequiredValidator Component="description" Text="Description is required"/>
                    </div>

                    <div class="form-group mb-4">
                        <RadzenLabel Text="Test Plan"/>
                        <RadzenDropDown id="testplan"
                                        Data="@_testPlansList"
                                        @bind-Value="@TestExecutionModelv2.SelectedTestPlan"
                                        TextProperty="Name"
                                        ValueProperty="Id"
                                        class="input-style"
                                        Name="testplan"/>
                        <RadzenRequiredValidator Component="testplan" Text="Test Plan is required"/>
                    </div>

                    <div class="form-group mb-4">
                        <RadzenLabel Text="Priority"/>
                        <RadzenDropDown id="priority"
                                        @bind-Value="_testExecution.Priority"
                                        Data="EnumService.GetEnumValues<Priority>()"
                                        class="input-style"
                                        Name="priority"/>
                        <RadzenRequiredValidator Component="priority" Text="Priority is required"/>
                    </div>

                    <div class="form-group mb-4">
                        <RadzenLabel Text="Status"/>
                        <RadzenDropDown id="status"
                                        @bind-Value="_testExecution.WorkflowStatus"
                                        Data="EnumService.GetEnumValues<WorkflowStatus>()"
                                        class="input-style"
                                        Name="status"/>
                        <RadzenRequiredValidator Component="status" Text="Workflow Status is required"/>
                    </div>


                    <div class="form-group mb-4">
                        <RadzenLabel Text="Assigned To"/>
                        <RadzenDropDown id="assignedto"
                                        Data="@_usersList"
                                        @bind-Value="_testExecution.AssignedTo"
                                        TextProperty="UserName"
                                        ValueProperty="Id"
                                        class="input-style"
                                        Name="assignedto"/>
                        <RadzenRequiredValidator Component="assignedto" Text="User assignment is required"/>
                    </div>


                    <!-- Submit button inside the form -->
                    <RadzenButton Icon="update" Text="Test Execution" ButtonStyle="ButtonStyle.Warning"
                                  ButtonType="ButtonType.Submit"
                                  Style="margin-bottom: 10px;"/>
                </RadzenTemplateForm>
            </RadzenStack>, new DialogOptions() { Draggable = true, CloseDialogOnOverlayClick = true, Resizable = true });
    }

}