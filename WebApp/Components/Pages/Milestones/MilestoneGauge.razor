<RadzenStack AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="0">
    <RadzenArcGauge Style="width: 100%; height: 250px;">
        <RadzenArcGaugeScale Step="10" Min="0" Max="100" MinorStep="2" Radius="1"
                             TickPosition="GaugeTickPosition.Outside" Y="0.9" Margin="0">
            <!-- Expected Value Gauge -->
            <RadzenArcGaugeScaleValue Value="@ExpectedValue" ShowValue="true" StrokeWidth="20" Stroke="green">
                <Template Context="pointer">
                    <RadzenStack AlignItems="AlignItems.Start" Gap="0" Style="margin-top: -70%;">
                        <RadzenText
                            MouseEnter="@(args => AppTooltipService.ShowTooltip(args, "Desired", TooltipPosition.Left))"
                            MouseLeave="@AppTooltipService.HideTooltip"
                            class="rz-m-0" Style="color: green;">
                            <strong>@pointer.Value%</strong>
                        </RadzenText>
                    </RadzenStack>
                </Template>
            </RadzenArcGaugeScaleValue>
            <!-- Current Value Gauge -->
            <RadzenArcGaugeScaleValue Value="@CurrentValue" ShowValue="true" Fill="blue" StrokeWidth="0" Stroke="blue">
                <Template Context="pointer">
                    <RadzenStack AlignItems="AlignItems.Start" Gap="0" Style="margin-bottom:0%;">
                        <RadzenText
                            MouseEnter="@(args => AppTooltipService.ShowTooltip(args, "Attained", TooltipPosition.Right))"
                            MouseLeave="@AppTooltipService.HideTooltip"
                            class="rz-m-0" Style="color: blue;">
                            <strong>@pointer.Value%</strong>
                        </RadzenText>
                    </RadzenStack>
                </Template>
            </RadzenArcGaugeScaleValue>
        </RadzenArcGaugeScale>
    </RadzenArcGauge>
    <RadzenLabel Text="@Title"></RadzenLabel>

</RadzenStack>




@code {

    [Parameter] public double CurrentValue { get; set; } // Current percentage value

    [Parameter] public double ExpectedValue { get; set; } // Expected percentage value

    [Parameter] public string Title { get; set; } = string.Empty; // Title of the gauge

}