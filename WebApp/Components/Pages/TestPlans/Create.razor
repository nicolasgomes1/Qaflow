@page "/project/{ProjectId:int}/testplans/create"
@rendermode InteractiveServer

<h3 class="text-center text-primary mb-4">Create Test Plan</h3>

<RadzenTemplateForm Data="@_testPlans" TItem="TestPlans" Submit="CreateNewTestPlan">
    <ValidationSummary class="alert alert-danger"/>

    <RadzenTabs RenderMode="TabRenderMode.Client" @bind-SelectedIndex="_selectedIndex">
        <Tabs>
            <RadzenTabsItem Text="Test Plans">
                <div class="form-group mb-4">
                    <RadzenLabel Text="Name"/>
                    <RadzenTextBox id="name"
                                   @bind-Value="_testPlans.Name"
                                   class="input-style"
                                   Name="name"/>
                    <RadzenRequiredValidator Component="name" Text="Name is required"/>
                </div>

                <div class="form-group mb-4">
                    <RadzenLabel Text="Description"/>
                    <RadzenTextBox id="description"
                                   @bind-Value="_testPlans.Description"
                                   class="input-style"
                                   Name="description"/>
                    <RadzenRequiredValidator Component="description" Text="Description is recommended"/>
                </div>


                <div class="form-group mb-4">
                    <RadzenLabel Text="Priority"/>
                    <RadzenDropDown id="priority"
                                    @bind-Value="_testPlans.Priority"
                                    Data="EnumService.GetEnumValues<Priority>()"
                                    class="input-style"
                                    Name="priority"/>
                    <RadzenRequiredValidator Component="priority" Text="Priority is required"/>
                </div>


                <div class="form-group mb-4">
                    <RadzenLabel Text="Test Cases"/>
                    <RadzenDropDown id="testcases"
                                    Data="@TestCasesModel.TestCasesList"
                                    @bind-Value="TestPlansModel.SelectedTestCasesIds"
                                    TextProperty="Name"
                                    ValueProperty="Id"
                                    Multiple="true"
                                    class="input-style"
                                    Name="Test Cases"/>
                </div>
            </RadzenTabsItem>
            <RadzenTabsItem Text="Files">
                <FileUpload UploadedFiles="_uploadedFiles"/>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>


    <CreateEditActions EntityName="testplans" CreateEdit="Create"/>
</RadzenTemplateForm>

@code {

    [Parameter] public int ProjectId { get; set; }

    int _selectedIndex;
    private readonly TestPlans _testPlans = new();
    private readonly List<IBrowserFile>? _uploadedFiles = [];


    protected override async Task OnInitializedAsync()
    {
        await TestCasesModel.GetAllTestCases();
    }

    private async Task CreateNewTestPlan()
    {
        await TestPlansModel.CreateTestPlan1(_testPlans, _uploadedFiles);
        NavigationManager.NavigateTo($"project/{ProjectStateService.ProjectId}/testplans");
        StateHasChanged();
        await FormNotificationService.NotifySuccess($"Test Plan with Id {_testPlans.Id} Created Successfully");
    }

}