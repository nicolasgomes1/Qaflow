@page "/project/{ProjectId:int}/testplans/view/{Id:int}"
@rendermode InteractiveServer
@attribute [Authorize]

<AlertTitle TitleText="@($"Viewing test plan {Id}")"/>

<RadzenTabs RenderMode="TabRenderMode.Client">
    <Tabs>
        <RadzenTabsItem Text="Test Plans Details">
            <RadzenRow>
                <RadzenCard Style="width: 50%; padding: 20px;">

                    <div style="display: grid; grid-template-columns: 1fr 2fr; row-gap: 10px;">
                        <RadzenLabel Text="Id:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_testPlans.Id.ToString()"/>

                        <RadzenLabel Text="Name:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_testPlans.Name"/>

                        <RadzenLabel Text="Description:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_testPlans.Description"/>

                        <RadzenLabel Text="Priority:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_testPlans.Priority.ToString()"/>

                        <RadzenLabel Text="Is Archived:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_testPlans.ArchivedStatus.ToString()"/>

                        <RadzenLabel Text="Cycle:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@(_testPlans.Cycle?.Name ?? "No cycle assigned")"/>

                        <RadzenLabel Text="Created At:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_testPlans.CreatedAt.ToString(CultureInfo.CurrentCulture)"/>

                        <RadzenLabel Text="Modified At:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_testPlans.ModifiedAt.ToString(CultureInfo.CurrentCulture)"/>

                        <RadzenLabel Text="Created By:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_testPlans.CreatedBy"/>

                        <RadzenLabel Text="Modified By:" Style="font-weight: bold;"/>
                        <RadzenLabel Text="@_testPlans.ModifiedBy"/>


                    </div>
                </RadzenCard>
            </RadzenRow>
        </RadzenTabsItem>
        <RadzenTabsItem Text="@ContextTestTitle()" Disabled="TestPlansHasNoTests">
            @if (_testPlans.LinkedTestCases.Any())
            {
                <RadzenDataGrid Data="_testPlans.LinkedTestCases" TItem="TestCases" Style="margin-top: 20px;">
                    <HeaderTemplate>
                        <h4 class="text-center text-primary mb-4">Test Cases</h4>

                    </HeaderTemplate>

                    <Columns>
                        <RadzenDataGridColumn Property="Name" Title="Name"/>
                        <RadzenDataGridColumn Property="Description" Title="Description"/>
                        <RadzenDataGridColumn Property="Priority" Title="Priority"/>
                        <RadzenDataGridColumn Property="CreatedAt" Title="Created At"/>
                        <RadzenDataGridColumn Property="ModifiedAt" Title="Modified At"/>

                        <RadzenDataGridColumn>
                            <Template Context="ctx">
                                <div class="btn-group">
                                    <RadzenButton
                                        Click="@(() => NavigationManager.NavigateTo($"/project/{ProjectId}/testcases/view/{ctx.Id}"))"
                                        Size="ButtonSize.Small"
                                        Icon="visibility"
                                        MouseEnter="@(args => AppTooltipService.ShowTooltip(args, "View Test Case"))"
                                        MouseLeave="@AppTooltipService.HideTooltip"/>
                                </div>
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
            }
            else
            {
                <p>No Test Cases linked to this Test Plan.</p>
            }
        </RadzenTabsItem>
        <RadzenTabsItem
            data-testid="testplan_files"
            Text="@ContextFilesTitle()" Disabled="@TestPlansHasNoFiles">
            <FileViewer Files="Files" EntityName="@nameof(TestPlansFile)"/>
        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>


<ViewEditActions EntityName="testplans" EntityId="_testPlans.Id" IsArchived="_isArchived"/>

@code {
    [Parameter] public int Id { get; set; }

    [Parameter] public int ProjectId { get; set; }

    private bool TestPlansHasNoFiles => !Files!.Any();

    private List<TestPlansFile>? Files { get; set; } = [];


    private bool TestPlansHasNoTests => !_testPlans.LinkedTestCases.Any();

    private string ContextFilesTitle()
    {
        return TestPlansHasNoFiles ? "No Files" : "Existing Files";
    }

    private string ContextTestTitle()
    {
        return TestPlansHasNoTests ? "No Test Cases" : "Existing Test Cases";
    }

    private TestPlans _testPlans = new();
    private bool _isArchived = true;
    protected override async Task OnInitializedAsync()
    {
        _testPlans = await TestPlansModel.GetTestPlanByIdAsync(Id);
        if (_testPlans.ArchivedStatus == ArchivedStatus.Archived) _isArchived = false;
        Files = await TestPlansFilesModel.GetFilesByTestPlanId(Id, ProjectId);
    }

}
