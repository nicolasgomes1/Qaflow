@rendermode InteractiveServer

<RadzenTree Style="height: 100%; overflow: auto;" Data="@_projects">
    @foreach (var project in _projects)
    {
        <RadzenTreeItem Text="@project.Name">
            <ChildContent>
                <!-- Requirements Folder -->
                <RadzenTreeItem Text="Requirements">
                    <ChildContent>
                        @foreach (var requirement in project.Requirements)
                        {
                            <RadzenTreeItem Text="@requirement.Name">
                                <ChildContent>
                                    @if (requirement.LinkedTestCases != null)
                                    {
                                        foreach (var testCase in requirement.LinkedTestCases)
                                        {
                                            <RadzenTreeItem Text="@testCase.Name"/>
                                        }
                                    }
                                </ChildContent>
                            </RadzenTreeItem>
                        }
                    </ChildContent>
                </RadzenTreeItem>

                <!-- Test Plans Folder -->
                <RadzenTreeItem Text="Test Plans">
                    <ChildContent>
                        @foreach (var testPlan in project.TestPlans)
                        {
                            <RadzenTreeItem Text="@testPlan.Name">
                                <ChildContent>
                                    @foreach (var testCase in testPlan.LinkedTestCases)
                                    {
                                        <RadzenTreeItem Text="@testCase.Name"/>
                                    }
                                </ChildContent>
                            </RadzenTreeItem>
                        }
                    </ChildContent>
                </RadzenTreeItem>
                
                <RadzenTreeItem Text="@TestCasesCount" Data="_testCases">
                    <RadzenTreeItem Text="Test Cases With Test Plans">
                        <ChildContent>
                            @foreach (var testCase in _testCases.Where(tc => tc.TestPlans.Count > 0))
                            {
                                <RadzenTreeItem Text="@testCase.Name">
                                </RadzenTreeItem>
                            }
                        </ChildContent>
                    </RadzenTreeItem>
                    <RadzenTreeItem Text="Test Cases Without Test Plans">
                        <ChildContent>
                            @foreach (var testCase in _testCases.Where(tc => tc.TestPlans.Count == 0))
                            {
                                <RadzenTreeItem Text="@testCase.Name">
                                </RadzenTreeItem>
                            }
                        </ChildContent>
                    </RadzenTreeItem>
                </RadzenTreeItem>

                <RadzenTreeItem Text="Test Plans" Data="_testPlans">
                    <RadzenTreeItem Text="Test Plans With Test Cases">
                        <ChildContent>
                            @foreach (var testPlan in _testPlans.Where(tc => tc.LinkedTestCases.Count > 0))
                            {
                                <RadzenTreeItem Text="@testPlan.Name">
                                </RadzenTreeItem>
                            }
                        </ChildContent>
                    </RadzenTreeItem>
                    <RadzenTreeItem Text="Test Without Test Cases">
                        <ChildContent>
                            @foreach (var testPlan in _testPlans.Where(tc => tc.LinkedTestCases.Count == 0))
                            {
                                <RadzenTreeItem Text="@testPlan.Name">
                                </RadzenTreeItem>
                            }
                        </ChildContent>
                    </RadzenTreeItem>
                </RadzenTreeItem>

            </ChildContent>
        </RadzenTreeItem>
    }
</RadzenTree>

@code {
    [Parameter] public int ProjectId { get; set; }

    private IEnumerable<Projects> _projects = new List<Projects>();
    private IEnumerable<TestCases> _testCases = new List<TestCases>();
    private IEnumerable<TestPlans> _testPlans = new List<TestPlans>();
    private string TestCasesCount => $"Test Cases {_testCases.Count()}";


    protected override async Task OnInitializedAsync()
    {
        _projects = await ProjectModel.GetProjectsData(ProjectId); // Ensure this fetches both Requirements and TestPlans
        _testCases = await TestCasesModel.GetTestCasesForProjectTree(ProjectId);
        _testPlans = await TestPlansModel.GetTestPlansProjectTree(ProjectId); // Ensure this fetches both TestPlans and TestCases
    }


}

