@page "/"
@rendermode InteractiveServer
@attribute [Authorize(Roles = $"{nameof(UserRoles.Admin)},{nameof(UserRoles.Manager)},{nameof(UserRoles.User)}")]

<PageTitle>Home</PageTitle>

<AuthorizeView>
    <Authorized>
        <div style="text-align: center; font-size: larger;">
            <strong>
                <RadzenBadge Shade="Shade.Default" Variant="Variant.Outlined">
                    @Loc["Welcome"], @UserService.GetCurrentUserInfoAsync().Result.UserName!
                </RadzenBadge>
            </strong>
        </div>

        <!--Home Page -->
        <IndexProjects/>

    </Authorized>
    <NotAuthorized>
        <div style="text-align: center; font-size: larger;">
            <strong>
                <RadzenBadge Shade="Shade.Default" Variant="Variant.Outlined">
                    Welcome, Guest User!
                </RadzenBadge>
            </strong>
        </div>
    </NotAuthorized>
</AuthorizeView>
@if (UserService.GetCurrentUserInfoAsync().Result.UserName == null)
{
    <br/>
    <div style="text-align: center;">
        <RadzenButton data-testid="login" Click="@GoToLogin" Size="ButtonSize.Large" Text="Login"></RadzenButton>
        <RadzenButton data-testid="register" Click="@GoToRegister" Size="ButtonSize.Large"
                      Text="Register"></RadzenButton>
    </div>
}

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ProjectState.ResetCurrentProjectAsync();
        }
    }


    void GoToLogin()
    {
        NavigationManager.NavigateTo("/Account/Login");
    }

    void GoToRegister()
    {
        NavigationManager.NavigateTo("/Account/Register");
    }

}