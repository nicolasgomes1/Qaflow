@page "/chatgptchat"
@using System.Text.Json
@rendermode InteractiveServer
@inject IConfiguration Configuration


<RadzenStack Orientation="Orientation.Vertical">


    <RadzenTextArea @bind-Value="_request" Placeholder="Enter your request"
                    Style="width: 50%; height: 150px; margin-bottom: 10px;"/>

    <RadzenStack Orientation="Orientation.Horizontal">
        <RadzenButton Text="Send Request" Click="SendRequest" Style="margin-bottom: 10px;"/>
    </RadzenStack>


</RadzenStack>

<RadzenLabel Text="@_response" Style="display: block; margin-top: 10px;"/>

@code{

    private string _request = "";
    private string? _response = "";
    private const string Endpoint = "https://api.openai.com/v1/chat/completions";
    private string? _apiKey = string.Empty;

    protected override void OnInitialized()
    {
        // Retrieve the API Key from configuration
        _apiKey = Configuration["OpenApi:ApiKey"];
    }

    private async Task SendRequest()
    {
        // Prepare the messages as a list
        var messages = new[]
        {
            new { role = "user", content = _request }
        };

        // Prepare the request payload
        var data = new
        {
            model = "gpt-3.5-turbo",
            messages = messages,
            temperature = 0.7
        };

        // Serialize the data to a JSON string
        var jsonString = JsonSerializer.Serialize(data);

        // Set the content type for the request body
        var content = new StringContent(jsonString, Encoding.UTF8, "application/json");


        var client = new HttpClient();


        // Add the authorization header
        client.DefaultRequestHeaders.Add("Authorization", _apiKey); // Make sure to replace with your key

        var response2 = await client.PostAsync(Endpoint, content);

        var responseContent = await response2.Content.ReadAsStringAsync();
        // Parse the response JSON using System.Text.Json
        using JsonDocument doc = JsonDocument.Parse(responseContent);
        JsonElement root = doc.RootElement;
        
        _response = root.GetProperty("choices")[0].GetProperty("message").GetProperty("content").GetString() ?? "No value";

        Console.WriteLine(_response);

        StateHasChanged();
    }

}


