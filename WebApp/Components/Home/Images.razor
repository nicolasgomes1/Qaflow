@page "/images"
@rendermode InteractiveServer
<RadzenStack AlignItems="AlignItems.Center" class="rz-mx-auto rz-my-12">
    @if (_files.Any())
    {
        @foreach (var file in _files)
        {
            <div @onclick="() => ShowFullImage(file.FileContent)" style="cursor: pointer;">
                <!-- Thumbnail of the image -->

                @{
                    System.Diagnostics.Debug.Assert(file.FileContent != null, "file.FileContent != null");
                }
                <RadzenImage Path="@($"data:image/jpeg;base64,{Convert.ToBase64String(file.FileContent)}")"
                             AlternateText="thumbnail image" Style="width: 250px; height: auto;"/>
            </div>
        }
    }
    else
    {
        <p>No images available.</p>
    }
</RadzenStack>

@if (_isModalVisible)
{
    <!-- Full-screen overlay for the modal -->
    <div
        style="position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; background-color: rgba(0, 0, 0, 0.5); display: flex; align-items: center; justify-content: center; z-index: 1000;"
        @onclick="CloseFullImage">
        <div style="position: relative; background: white; padding: 20px; border-radius: 8px;"
             @onclick:stopPropagation="true">
            <!-- Full-size image display -->

            @{
                System.Diagnostics.Debug.Assert(_fullImageContent != null, nameof(_fullImageContent) + " != null");
            }
            <RadzenImage Path="@($"data:image/jpeg;base64,{Convert.ToBase64String(_fullImageContent)}")"
                         AlternateText="full image"
                         Style="max-width: 70vw; max-height: 70vh;"/>
        </div>
    </div>
}

@code {

    // Collection of files to display thumbnails
    List<RequirementsFile> _files = [];
    private bool _isModalVisible = false;
    private byte[]? _fullImageContent;

    protected override async Task OnInitializedAsync()
    {
        await GetImagesFromRequirements();
    }

    private async Task GetImagesFromRequirements()
    {
        var db = await DbContext.CreateDbContextAsync();
        _files = await db.RequirementsFiles
            .Where(rf => rf.RequirementsId == 42)
            .ToListAsync();
    }

    private void ShowFullImage(byte[]? fileContent)
    {
        _fullImageContent = fileContent;
        _isModalVisible = true;
    }

    private void CloseFullImage()
    {
        _isModalVisible = false;
    }

}

